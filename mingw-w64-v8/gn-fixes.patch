diff -aurp gn-orig/build/gen.py gn/build/gen.py
--- gn-orig/build/gen.py	2020-08-26 00:14:21.000000000 +0200
+++ gn/build/gen.py	2020-08-26 00:32:00.000000000 +0200
@@ -649,95 +649,6 @@ def WriteGNNinja(path, platform, host, o
 
   executables = {
       'gn': {'sources': [ 'src/gn/gn_main.cc' ], 'libs': []},
-
-      'gn_unittests': { 'sources': [
-        'src/gn/action_target_generator_unittest.cc',
-        'src/gn/analyzer_unittest.cc',
-        'src/gn/args_unittest.cc',
-        'src/gn/builder_unittest.cc',
-        'src/gn/c_include_iterator_unittest.cc',
-        'src/gn/command_format_unittest.cc',
-        'src/gn/commands_unittest.cc',
-        'src/gn/compile_commands_writer_unittest.cc',
-        'src/gn/config_unittest.cc',
-        'src/gn/config_values_extractors_unittest.cc',
-        'src/gn/escape_unittest.cc',
-        'src/gn/exec_process_unittest.cc',
-        'src/gn/filesystem_utils_unittest.cc',
-        'src/gn/file_writer_unittest.cc',
-        'src/gn/frameworks_utils_unittest.cc',
-        'src/gn/function_filter_unittest.cc',
-        'src/gn/function_foreach_unittest.cc',
-        'src/gn/function_forward_variables_from_unittest.cc',
-        'src/gn/function_get_label_info_unittest.cc',
-        'src/gn/function_get_path_info_unittest.cc',
-        'src/gn/function_get_target_outputs_unittest.cc',
-        'src/gn/function_process_file_template_unittest.cc',
-        'src/gn/function_rebase_path_unittest.cc',
-        'src/gn/function_template_unittest.cc',
-        'src/gn/function_toolchain_unittest.cc',
-        'src/gn/function_write_file_unittest.cc',
-        'src/gn/functions_target_rust_unittest.cc',
-        'src/gn/functions_target_unittest.cc',
-        'src/gn/functions_unittest.cc',
-        'src/gn/hash_table_base_unittest.cc',
-        'src/gn/header_checker_unittest.cc',
-        'src/gn/inherited_libraries_unittest.cc',
-        'src/gn/input_conversion_unittest.cc',
-        'src/gn/json_project_writer_unittest.cc',
-        'src/gn/rust_project_writer_unittest.cc',
-        'src/gn/rust_project_writer_helpers_unittest.cc',
-        'src/gn/label_pattern_unittest.cc',
-        'src/gn/label_unittest.cc',
-        'src/gn/loader_unittest.cc',
-        'src/gn/metadata_unittest.cc',
-        'src/gn/metadata_walk_unittest.cc',
-        'src/gn/ninja_action_target_writer_unittest.cc',
-        'src/gn/ninja_binary_target_writer_unittest.cc',
-        'src/gn/ninja_build_writer_unittest.cc',
-        'src/gn/ninja_bundle_data_target_writer_unittest.cc',
-        'src/gn/ninja_c_binary_target_writer_unittest.cc',
-        'src/gn/ninja_copy_target_writer_unittest.cc',
-        'src/gn/ninja_create_bundle_target_writer_unittest.cc',
-        'src/gn/ninja_generated_file_target_writer_unittest.cc',
-        'src/gn/ninja_group_target_writer_unittest.cc',
-        'src/gn/ninja_rust_binary_target_writer_unittest.cc',
-        'src/gn/ninja_target_command_util_unittest.cc',
-        'src/gn/ninja_target_writer_unittest.cc',
-        'src/gn/ninja_toolchain_writer_unittest.cc',
-        'src/gn/operators_unittest.cc',
-        'src/gn/output_conversion_unittest.cc',
-        'src/gn/parse_tree_unittest.cc',
-        'src/gn/parser_unittest.cc',
-        'src/gn/path_output_unittest.cc',
-        'src/gn/pattern_unittest.cc',
-        'src/gn/runtime_deps_unittest.cc',
-        'src/gn/scope_per_file_provider_unittest.cc',
-        'src/gn/scope_unittest.cc',
-        'src/gn/setup_unittest.cc',
-        'src/gn/source_dir_unittest.cc',
-        'src/gn/source_file_unittest.cc',
-        'src/gn/string_atom_unittest.cc',
-        'src/gn/string_output_buffer_unittest.cc',
-        'src/gn/string_utils_unittest.cc',
-        'src/gn/substitution_pattern_unittest.cc',
-        'src/gn/substitution_writer_unittest.cc',
-        'src/gn/target_unittest.cc',
-        'src/gn/template_unittest.cc',
-        'src/gn/test_with_scheduler.cc',
-        'src/gn/test_with_scope.cc',
-        'src/gn/tokenizer_unittest.cc',
-        'src/gn/unique_vector_unittest.cc',
-        'src/gn/value_unittest.cc',
-        'src/gn/vector_utils_unittest.cc',
-        'src/gn/version_unittest.cc',
-        'src/gn/visibility_unittest.cc',
-        'src/gn/visual_studio_utils_unittest.cc',
-        'src/gn/visual_studio_writer_unittest.cc',
-        'src/gn/xcode_object_unittest.cc',
-        'src/gn/xml_element_writer_unittest.cc',
-        'src/util/test/gn_test.cc',
-      ], 'libs': []},
   }
 
   if platform.is_posix():
@@ -777,7 +688,7 @@ def WriteGNNinja(path, platform, host, o
       libs.extend([
           '-ladvapi32',
           '-ldbghelp',
-          '-lkernel32',
+          '-lpsapi',
           '-lole32',
           '-lshell32',
           '-luser32',
@@ -793,7 +704,6 @@ def WriteGNNinja(path, platform, host, o
 
   # we just build static libraries that GN needs
   executables['gn']['libs'].extend(static_libraries.keys())
-  executables['gn_unittests']['libs'].extend(static_libraries.keys())
 
   WriteGenericNinja(path, static_libraries, executables, cxx, ar, ld,
                     platform, host, options, cflags, ldflags,
